apiVersion: apps/v1
kind: Deployment
metadata:
  name: kekse
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kekse
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: TODO_ROLE_VALUE
      labels:
        app: kekse
    spec:
      containers:
        - name: app
          image: TODO_IMAGE_VALUE
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          livenessProbe:
            httpGet:
              path: "/actuator/health"
              port: http
            initialDelaySeconds: 40
            timeoutSeconds: 2
            periodSeconds: 3
            failureThreshold: 1
          readinessProbe:
            httpGet:
              path: "/actuator/health"
              port: http
            initialDelaySeconds: 40
            timeoutSeconds: 2
            periodSeconds: 3
            failureThreshold: 1
          resources:
            limits:
              cpu: 2000m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
  name: ingress
spec:
  rules:
  - host: TODO_DNS_NAME
    http:
      paths:
      - path: /
        backend:
          serviceName: kekse
          servicePort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: kekse
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
  selector:
    app: kekse
  type: ClusterIP
